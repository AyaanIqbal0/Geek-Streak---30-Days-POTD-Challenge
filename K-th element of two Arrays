class Solution {
    public long kthElement(int k, int arr1[], int arr2[]) {
      int n = arr1.length;
      int m = arr2.length;

    if (n > m) {
        return kthElement(k, arr2, arr1);
    }

    int low = Math.max(0, k - m);
    int high = Math.min(k, n);

    while (low <= high) {
        int mid1 = (low + high) / 2;
        int mid2 = k - mid1;

        int left1 = (mid1 > 0) ? arr1[mid1 - 1] : Integer.MIN_VALUE;
        int left2 = (mid2 > 0) ? arr2[mid2 - 1] : Integer.MIN_VALUE;

        int right1 = (mid1 < n) ? arr1[mid1] : Integer.MAX_VALUE;
        int right2 = (mid2 < m) ? arr2[mid2] : Integer.MAX_VALUE;

        if (left1 <= right2 && left2 <= right1) {
            return Math.max(left1, left2);
        } else if (left1 > right2) {
            high = mid1 - 1;
        } else {
            low = mid1 + 1;
        }
    }
    return -1;
    }
}
